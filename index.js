// Generated by CoffeeScript 1.12.6
(function() {
  var Promise, _, needle;

  _ = require('lodash');

  Promise = require('bluebird');

  needle = Promise.promisifyAll(require('needle'));

  module.exports = {
    token: function(url, client, user, scope) {
      var data, opts;
      if (user == null) {
        user = null;
      }
      if (scope == null) {
        scope = null;
      }
      opts = {
        'Content-Type': 'application/x-www-form-urlencoded',
        username: client.id,
        password: client.secret
      };
      data = {};
      if (user != null) {
        data = {
          grant_type: 'password',
          username: user.id,
          password: user.secret,
          scope: scope.join(' ')
        };
      } else {
        data = {
          grant_type: 'client_credentials'
        };
      }
      return needle.postAsync(url, data, opts).then(function(res) {
        return res.body.access_token;
      });
    },
    verify: function(url, scope, token) {
      var opts;
      opts = {
        headers: {
          Authorization: "Bearer " + token
        }
      };
      return needle.getAsync(url, opts).then(function(res) {
        var authScope, result;
        if (res.statusCode !== 200) {
          return Promise.reject(res.body);
        }
        authScope = res.body.scope.split(' ');
        result = _.intersection(scope, authScope);
        if (result.length !== scope.length) {
          Promise.reject("Unathorizated access to " + scope);
        }
        return res.body;
      });
    }
  };

}).call(this);
